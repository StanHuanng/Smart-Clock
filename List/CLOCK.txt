; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\output\clock.o --asm_dir=..\List\ --list_dir=..\List\ --depend=..\output\clock.d --cpu=Cortex-M0+ --apcs=interwork --diag_suppress=9931 -I..\FWLib\SC32F1XXX_Lib\inc -I..\User\HeadFiles -I..\User -I..\Drivers -I..\Apps -I..\CMSIS -IC:\Keil_v5\ARM\PACK\Keil\SC32F1xxx_DFP\1.0.6\Device\SC32F10xx\FWLib\SC32_Lib\inc -D__UVISION_VERSION=539 -DSC32F10xx -DSC32f10xx --omf_browse=..\output\clock.crf ..\User\CLOCK.c]
                          THUMB

                          AREA ||i.Delay||, CODE, READONLY, ALIGN=1

                  Delay PROC
;;;134    ////延时函数
;;;135    void Delay(unsigned int time)
000000  2200              MOVS     r2,#0
                  |L1.2|
;;;136    {
;;;137        
;;;138        unsigned int i=0;
;;;139        unsigned int j=0;
;;;140        for(i=0; i<100; i++)
;;;141            for(;time>0;time--)
000002  2800              CMP      r0,#0
000004  d005              BEQ      |L1.18|
;;;142                for(j=0; j<100; j++)
000006  2100              MOVS     r1,#0
                  |L1.8|
000008  1c49              ADDS     r1,r1,#1
00000a  2964              CMP      r1,#0x64
00000c  d3fc              BCC      |L1.8|
00000e  1e40              SUBS     r0,r0,#1
000010  e7f7              B        |L1.2|
                  |L1.18|
000012  1c52              ADDS     r2,r2,#1              ;141
000014  2a64              CMP      r2,#0x64              ;140
000016  d3f4              BCC      |L1.2|
;;;143                ;
;;;144        
;;;145    }
000018  4770              BX       lr
                          ENDP


                          AREA ||i.OLED_clock||, CODE, READONLY, ALIGN=2

                  OLED_clock PROC
;;;26     
;;;27     void OLED_clock(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;28     {
;;;29     
;;;30         if (sec >= 60) {
000002  4e31              LDR      r6,|L2.200|
000004  2000              MOVS     r0,#0
000006  6971              LDR      r1,[r6,#0x14]  ; sec
000008  293c              CMP      r1,#0x3c
00000a  da01              BGE      |L2.16|
;;;31             sec = 0;
;;;32             min++;
00000c  6931              LDR      r1,[r6,#0x10]  ; min
00000e  e003              B        |L2.24|
                  |L2.16|
000010  6170              STR      r0,[r6,#0x14]  ; sec
000012  6931              LDR      r1,[r6,#0x10]  ; min
000014  1c49              ADDS     r1,r1,#1
000016  6131              STR      r1,[r6,#0x10]  ; min
                  |L2.24|
;;;33         }
;;;34         
;;;35         if (min >= 60) {
000018  293c              CMP      r1,#0x3c
00001a  da01              BGE      |L2.32|
;;;36             min = 0;
;;;37             hour++;
00001c  68f1              LDR      r1,[r6,#0xc]  ; hour
00001e  e003              B        |L2.40|
                  |L2.32|
000020  6130              STR      r0,[r6,#0x10]  ; min
000022  68f1              LDR      r1,[r6,#0xc]  ; hour
000024  1c49              ADDS     r1,r1,#1
000026  60f1              STR      r1,[r6,#0xc]  ; hour
                  |L2.40|
;;;38         }
;;;39         
;;;40         if (hour >= 24) {
000028  2918              CMP      r1,#0x18
00002a  db03              BLT      |L2.52|
;;;41             hour = 0;
;;;42             day++;
00002c  60f0              STR      r0,[r6,#0xc]  ; hour
00002e  68b0              LDR      r0,[r6,#8]  ; day
000030  1c40              ADDS     r0,r0,#1
000032  60b0              STR      r0,[r6,#8]  ; day
                  |L2.52|
;;;43         }
;;;44         
;;;45         // 处理月和日的溢出
;;;46         if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {
;;;47             if (day > 31) {
;;;48                 day = 1;
;;;49                 month++;
000034  6871              LDR      r1,[r6,#4]  ; month
000036  4a24              LDR      r2,|L2.200|
000038  1c48              ADDS     r0,r1,#1
00003a  2401              MOVS     r4,#1                 ;46
00003c  6815              LDR      r5,[r2,#0]            ;46
00003e  2901              CMP      r1,#1                 ;46
000040  d016              BEQ      |L2.112|
000042  2903              CMP      r1,#3                 ;46
000044  d014              BEQ      |L2.112|
000046  2905              CMP      r1,#5                 ;46
000048  d012              BEQ      |L2.112|
00004a  2907              CMP      r1,#7                 ;46
00004c  d010              BEQ      |L2.112|
00004e  2908              CMP      r1,#8                 ;46
000050  d00e              BEQ      |L2.112|
000052  290a              CMP      r1,#0xa               ;46
000054  d00c              BEQ      |L2.112|
000056  290c              CMP      r1,#0xc               ;46
000058  d00a              BEQ      |L2.112|
;;;50             }
;;;51         } else if (month == 4 || month == 6 || month == 9 || month == 11) {
00005a  2904              CMP      r1,#4
00005c  d00c              BEQ      |L2.120|
00005e  2906              CMP      r1,#6
000060  d00a              BEQ      |L2.120|
000062  2909              CMP      r1,#9
000064  d008              BEQ      |L2.120|
000066  290b              CMP      r1,#0xb
000068  d006              BEQ      |L2.120|
;;;52             if (day > 30) {
;;;53                 day = 1;
;;;54                 month++;
;;;55             }
;;;56         } else if (month == 2) {
00006a  2902              CMP      r1,#2
00006c  d010              BEQ      |L2.144|
00006e  e008              B        |L2.130|
                  |L2.112|
000070  68b1              LDR      r1,[r6,#8]            ;47  ; day
000072  291f              CMP      r1,#0x1f              ;47
000074  dc03              BGT      |L2.126|
000076  e004              B        |L2.130|
                  |L2.120|
000078  68b1              LDR      r1,[r6,#8]            ;52  ; day
00007a  291e              CMP      r1,#0x1e              ;52
00007c  dd01              BLE      |L2.130|
                  |L2.126|
00007e  60b4              STR      r4,[r6,#8]            ;54  ; day
000080  6070              STR      r0,[r6,#4]            ;54  ; month
                  |L2.130|
;;;57             // 处理闰年
;;;58             if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {
;;;59                 if (day > 29) {
;;;60                     day = 1;
;;;61                     month++;
;;;62                 }
;;;63             } else {
;;;64                 // 平年2月
;;;65                 if (day > 28) {
;;;66                     day = 1;
;;;67                     month++;
;;;68                 }
;;;69             }
;;;70         }
;;;71     
;;;72         // 如果月份大于12，则归1，并且年份增加
;;;73         if (month > 12) 
000082  6870              LDR      r0,[r6,#4]  ; month
000084  280c              CMP      r0,#0xc
000086  dd02              BLE      |L2.142|
;;;74     		{
;;;75             month = 1;
000088  1c6d              ADDS     r5,r5,#1
;;;76             year++;
00008a  6035              STR      r5,[r6,#0]  ; year
00008c  6074              STR      r4,[r6,#4]  ; month
                  |L2.142|
;;;77         }
;;;78     		
;;;79     }
00008e  bdf8              POP      {r3-r7,pc}
                  |L2.144|
000090  07a8              LSLS     r0,r5,#30             ;58
000092  2703              MOVS     r7,#3                 ;46
000094  2800              CMP      r0,#0                 ;58
000096  d105              BNE      |L2.164|
000098  2164              MOVS     r1,#0x64              ;58
00009a  4628              MOV      r0,r5                 ;58
00009c  f7fffffe          BL       __aeabi_idivmod
0000a0  2900              CMP      r1,#0                 ;58
0000a2  d10c              BNE      |L2.190|
                  |L2.164|
0000a4  21ff              MOVS     r1,#0xff              ;58
0000a6  3191              ADDS     r1,r1,#0x91           ;58
0000a8  4628              MOV      r0,r5                 ;58
0000aa  f7fffffe          BL       __aeabi_idivmod
0000ae  2900              CMP      r1,#0                 ;58
0000b0  d005              BEQ      |L2.190|
0000b2  68b0              LDR      r0,[r6,#8]            ;65  ; day
0000b4  281c              CMP      r0,#0x1c              ;65
0000b6  ddea              BLE      |L2.142|
                  |L2.184|
0000b8  6077              STR      r7,[r6,#4]            ;67  ; month
0000ba  60b4              STR      r4,[r6,#8]            ;67  ; day
0000bc  bdf8              POP      {r3-r7,pc}
                  |L2.190|
0000be  68b0              LDR      r0,[r6,#8]            ;59  ; day
0000c0  281d              CMP      r0,#0x1d              ;59
0000c2  dcf9              BGT      |L2.184|
0000c4  bdf8              POP      {r3-r7,pc}
;;;80     
                          ENDP

0000c6  0000              DCW      0x0000
                  |L2.200|
                          DCD      ||.data||

                          AREA ||i.alarm_clock_set||, CODE, READONLY, ALIGN=2

                  alarm_clock_set PROC
;;;83     int sec_set=20;
;;;84     void alarm_clock_set(int newhour_set,int newmin_set,int newsec_set)
000000  4b01              LDR      r3,|L3.8|
;;;85     {
;;;86     	hour_set=newhour_set;
000002  c307              STM      r3!,{r0-r2}
;;;87     	min_set=newmin_set;
;;;88     	sec_set=newsec_set;
;;;89     	
;;;90     }
000004  4770              BX       lr
;;;91     
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      ||.data||+0x18

                          AREA ||i.alarm_clock_start||, CODE, READONLY, ALIGN=2

                  alarm_clock_start PROC
;;;92     extern int a ;
;;;93     void alarm_clock_start(void)//当设定时间和当前时间一样的时候，响铃
000000  b570              PUSH     {r4-r6,lr}
;;;94     {
;;;95     int key;
;;;96     key=Key_GetState();
000002  f7fffffe          BL       Key_GetState
;;;97     	if(hour_set==hour && min_set == min)
000006  4d19              LDR      r5,|L4.108|
000008  4604              MOV      r4,r0                 ;96
00000a  68e9              LDR      r1,[r5,#0xc]  ; hour
00000c  69a8              LDR      r0,[r5,#0x18]  ; hour_set
00000e  4288              CMP      r0,r1
000010  d110              BNE      |L4.52|
000012  6929              LDR      r1,[r5,#0x10]  ; min
000014  69e8              LDR      r0,[r5,#0x1c]  ; min_set
000016  4288              CMP      r0,r1
000018  d10c              BNE      |L4.52|
;;;98     	{
;;;99     		OLED_Clear();
00001a  f7fffffe          BL       OLED_Clear
;;;100    		OLED_ShowString(3,4,"Clock!");
00001e  a214              ADR      r2,|L4.112|
000020  2104              MOVS     r1,#4
000022  2003              MOVS     r0,#3
000024  f7fffffe          BL       OLED_ShowString
;;;101    		Buzzer_ON();
000028  f7fffffe          BL       Buzzer_ON
;;;102    		motor_vibrate();
00002c  f7fffffe          BL       motor_vibrate
;;;103    		music_play();
000030  f7fffffe          BL       music_play
                  |L4.52|
;;;104    	int menu_state=5;
;;;105    	int menu_state0=5;
;;;106    	int menu_state1=0;
;;;107    	int menu_state2=0;	
;;;108    	}
;;;109    	if(snoozestate == 1 && (key == 1 || key == 2 || key == 3))
000034  4810              LDR      r0,|L4.120|
000036  6800              LDR      r0,[r0,#0]  ; snoozestate
000038  2801              CMP      r0,#1
00003a  d116              BNE      |L4.106|
00003c  2c01              CMP      r4,#1
00003e  d003              BEQ      |L4.72|
000040  2c02              CMP      r4,#2
000042  d001              BEQ      |L4.72|
000044  2c03              CMP      r4,#3
000046  d110              BNE      |L4.106|
                  |L4.72|
;;;110    	{
;;;111    	 Buzzer_OFF();
000048  f7fffffe          BL       Buzzer_OFF
;;;112         min_set+=5;  
00004c  69e8              LDR      r0,[r5,#0x1c]  ; min_set
00004e  1d40              ADDS     r0,r0,#5
;;;113         if (min_set >= 60) 
000050  61e8              STR      r0,[r5,#0x1c]  ; min_set
000052  283c              CMP      r0,#0x3c
000054  db04              BLT      |L4.96|
000056  383c              SUBS     r0,r0,#0x3c
;;;114    	{
;;;115         min_set -= 60;
;;;116         hour_set++;//目前分钟超过60 小时还不会进1
000058  61e8              STR      r0,[r5,#0x1c]  ; min_set
00005a  69a8              LDR      r0,[r5,#0x18]  ; hour_set
00005c  1c40              ADDS     r0,r0,#1
00005e  61a8              STR      r0,[r5,#0x18]  ; hour_set
                  |L4.96|
;;;117      }
;;;118         hour_set %= 24;
000060  2118              MOVS     r1,#0x18
000062  69a8              LDR      r0,[r5,#0x18]  ; hour_set
000064  f7fffffe          BL       __aeabi_idivmod
000068  61a9              STR      r1,[r5,#0x18]  ; hour_set
                  |L4.106|
;;;119    	}
;;;120    }
00006a  bd70              POP      {r4-r6,pc}
;;;121    extern int KeyNum;
                          ENDP

                  |L4.108|
                          DCD      ||.data||
                  |L4.112|
000070  436c6f63          DCB      "Clock!",0
000074  6b2100  
000077  00                DCB      0
                  |L4.120|
                          DCD      snoozestate

                          AREA ||i.snooze||, CODE, READONLY, ALIGN=2

                  snooze PROC
;;;121    extern int KeyNum;
;;;122    void snooze(void)//贪睡功能，按键按下后五分钟后再响铃
000000  b510              PUSH     {r4,lr}
;;;123    {    
;;;124            Buzzer_OFF();
000002  f7fffffe          BL       Buzzer_OFF
;;;125            min_set+=5;  
000006  4c08              LDR      r4,|L5.40|
000008  69e0              LDR      r0,[r4,#0x1c]  ; min_set
00000a  1d40              ADDS     r0,r0,#5
;;;126         if (min_set >= 60) 
00000c  61e0              STR      r0,[r4,#0x1c]  ; min_set
00000e  283c              CMP      r0,#0x3c
000010  db04              BLT      |L5.28|
000012  383c              SUBS     r0,r0,#0x3c
;;;127    	{
;;;128         min_set -= 60;
;;;129         hour_set++;//目前分钟超过60 小时还不会进1
000014  61e0              STR      r0,[r4,#0x1c]  ; min_set
000016  69a0              LDR      r0,[r4,#0x18]  ; hour_set
000018  1c40              ADDS     r0,r0,#1
00001a  61a0              STR      r0,[r4,#0x18]  ; hour_set
                  |L5.28|
;;;130      }
;;;131         hour_set %= 24;
00001c  2118              MOVS     r1,#0x18
00001e  69a0              LDR      r0,[r4,#0x18]  ; hour_set
000020  f7fffffe          BL       __aeabi_idivmod
000024  61a1              STR      r1,[r4,#0x18]  ; hour_set
;;;132    }
000026  bd10              POP      {r4,pc}
;;;133    
                          ENDP

                  |L5.40|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=2

                  year
                          DCD      0x000007e8
                  month
                          DCD      0x0000000c
                  ||day||
                          DCD      0x0000000d
                  hour
                          DCD      0x0000000a
                  min
                          DCD      0x0000001e
                  ||sec||
                          DCD      0x00000000
                  hour_set
                          DCD      0x0000000a
                  min_set
                          DCD      0x0000001e
                  sec_set
                          DCD      0x00000014

;*** Start embedded assembler ***

#line 1 "..\\User\\CLOCK.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_CLOCK_c_year____REV16|
#line 463 "..\\CMSIS\\cmsis_armcc.h"
|__asm___7_CLOCK_c_year____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_CLOCK_c_year____REVSH|
#line 478
|__asm___7_CLOCK_c_year____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
